general-notes:
    Manga and Chapter objects are not backed by data (making an edit to them does not do anything)
    The general style of this is completely procedural
    Classes will be made for Manga and Chapter along the lines of the sql tables in tables.sql
    any capitalized variables in the spec for middle refers to an object of that type

frontend:
    p!progress <ID|Nickname> [Chapter Number]:
        Fetches progress for a manga's chapter, either for one specified or the latest if one isn't specified
        Returns formatted progress for a manga's chapter.
    p!manga <ID> <Nickname>:
        creates a manga with the specified ID and nickname
        Returns a status of success/failure
    p!chapter <ID|Nickname> <Chapter Number>:
        Creates a chapter for the specified manga with all of the current staff who are working on it
        returns success/failure status
    p!edit {Manga-Staff|Chapter-Staff|Manga-Information|Chapter-Status} (other params explained for each one):
        Edits some status from the manga
        types:
            Manga-Staff <ID|Nickname> <Role> <Name>:
                Changes staff members assigned to a manga
            Chapter-Staff <ID|Nickname> <Chapter Number> <Role> <Name>:
                Changes staff members assigned to a chapter of a manga
            Manga-Information <ID|Nickname> {Nickname|Full-Name|Abandoned-Status} <ValueChangeTo>:
                Changes information about the manga
            Chapter-Status <ID|Nickname> <ChapterNumber> <StatusType> <NewStatus>:
                Changes the status of part of a chapter
        All types return a status of success/failure
                
    p!estimate <ID|Nickname> [Chapter Number]:
        Uses estimate function to estimate time until completion for a manga chapter
        if no chapter is specified it uses the latest chapter
        Returns unformatted estimated time of completion.

    p!help <Command>?:
        Returns the commands possible for the bot, or the syntax for a specific command.
        This is automatically called on improper formatting.

#frontend advanced commands - not necessarily implemented straightaway
    p!group <Commands>:
        Executes a group of commands all at once
        returns command results
    p!manga-advance <ID> <Nickname> <Data>:
        Creates a manga using more data in a colon and space seperated format of Key:Value Key2:Value2
        returns success/failure status
    p!edit-advance {Manga|Chapter} <ID|Nickname> <Chapter Number>? <Data>"
        Edits either a manga or chapter using colon space seperated format like the above creation menu
        returns success/failure status

middle:
#utilities
    estimate_time(Chapter):
        Estimates the release time for a Chapter

#getters for middle:
    __get_manga_id_from_nickname(manga_nickname):
        Returns the ID for a manga with a certain nickname
    get_manga(manga_id):
        Gets a manga from a nickname or ID
        returns a manga object
    get_chapter_or_latest(manga_id,chapter_number?):
        gets a chapter object from a nickname/id and chapter number
        or the latest one if no chapter # is specified
    get_progress(Chapter):
        Gets which components of a chapter have been completed or not completed in a slightly formatted string format
        returns: Array of progress strings
    get_help(command?):
        gets help for a command or the default if no command is passed

#edit/setters for middle
    manga_set_property(Manga,property_name,new_value):
        Changes a property for a manga
    chapter_set_property(Chapter,property_name,new_value):
        changes property for a chapter
        
db:
    initialize():
        Initializes database.
        returns nothing
    deinitialize():
        Cleans up database
        returns nothing
    get_manga_id(nickname):
        Gets the id for the manga with specified nickname.

    get_manga(manga_id):
        Gets information for a manga from an id or nickname
        returns a manga object

    get_chapter(manga_id,chapter_number):
        Gets the chapter for a manga and a specified chapter number
        returns a chapter object

    get_latest_chapter(manga_id):
        Gets the latest chapter for a manga
        returns the number of the latest chapter

    set_manga(manga_id,field_name,new_value):
        Sets/edits a property of a manga
        returns nothing
    set_chapter(manga_id,chapter_number,field_name,new_value):
        sets/edits a property of a chapter
        returns nothing

    create_manga(Manga):
        creates a manga in the table corresponding to the objects
        returns nothing
    create_chapter(Manga,chapter_number):
        creates a chapter for the manga with the chapter number
        returns nothing
    create_chapter_o(Chapter):
        Creates a chapter in the table according to the object
        returns nothing